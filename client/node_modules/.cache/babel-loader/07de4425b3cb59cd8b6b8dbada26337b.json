{"ast":null,"code":"var _jsxFileName = \"/home/dev/Documents/bugzilla/client/src/auth/Registration.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport * as yup from \"yup\";\nimport { signUpUser } from \"../redux/actions/userActions\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useFormik } from \"formik\";\nimport { Spinner } from \"../components\";\nimport styles from \"../assets/scss/registration.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Registrations = () => {\n  _s();\n\n  const [state, setState] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    passwordConfirmation: \"\",\n    role: \"\"\n  });\n  const roleRef = useRef();\n  const [clicked, setClicked] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const url = process.env.REACT_APP_REGISTRATION_URL;\n  const validationSchema = yup.object({\n    name: yup.string().required(\"Name is Required\"),\n    email: yup.string().email(\"Invalid Email Address\").required(\"Email is required\"),\n    password: yup.required(\"Password is required\").min(5, \"Length should be greater than 5\"),\n    passwordConfirmation: yup.string().oneOf([yup.ref(\"password\"), null], \"Passwords must match\"),\n    role: yup.string().required(\"Role is required\")\n  });\n  const formik = useFormik({\n    initialValues: {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      passwordConfirmation: \"\",\n      role: \"\"\n    },\n    validateSchema: yup.object({\n      name: yup.string().required(\"Name is Required\"),\n      email: yup.string().email(\"Invalid Email Address\").required(\"Email is required\"),\n      password: yup.required(\"Password is required\").min(5, \"Length should be greater than 5\"),\n      passwordConfirmation: yup.string().oneOf([yup.ref(\"password\"), null], \"Passwords must match\"),\n      role: yup.string().required(\"Role is required\")\n    }),\n    onSubmit: values => {\n      setClicked(true);\n      setState({ ...state,\n        name: values.name,\n        email: values.email,\n        password: values.password,\n        passwordConfirmation: values.passwordConfirmation,\n        role: roleRef.current.value\n      });\n    }\n  });\n  useEffect(() => {\n    if (clicked) {\n      dispatch(signUpUser(url, state, setLoading, navigate));\n      setLoading(true);\n    }\n  }, [clicked, state, url, dispatch, navigate]);\n  return loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n    className: styles.registrationForm,\n    onSubmit: formik.handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"name\",\n      name: \"name\",\n      placeholder: \"Your Name\",\n      onChange: formik.handleChange,\n      value: formik.values.name,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), formik.errors.name && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: formik.name.errors\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 30\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      name: \"email\",\n      placeholder: \"Email\",\n      onChange: formik.handleChange,\n      value: formik.values.email,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), formik.errors.name && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: formik.name.email\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 30\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      placeholder: \"Password\",\n      onChange: formik.handleChange,\n      value: formik.values.password,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), formik.errors.name && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: formik.name.password\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 30\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      name: \"passwordConfirmation\",\n      placeholder: \"Password Confirmation\",\n      onChange: formik.handleChange,\n      value: formik.values.passwordConfirmation,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), formik.errors.name && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: formik.name.passwordConfirmation\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 30\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"roles\",\n      ref: roleRef,\n      onChange: formik.handleChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"manager\",\n        children: \"Manager\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"developer\",\n        children: \"Developer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"qa\",\n        children: \"QA\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), formik.errors.name && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: formik.name.role\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 30\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: styles.submitButton,\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Registrations, \"DdYg/1HccRrKddpIyHVjmzV3lXY=\", false, function () {\n  return [useDispatch, useNavigate, useFormik];\n});\n\n_c = Registrations;\nexport default Registrations;\n\nvar _c;\n\n$RefreshReg$(_c, \"Registrations\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useDispatch","yup","signUpUser","useNavigate","useFormik","Spinner","styles","Registrations","state","setState","name","email","password","passwordConfirmation","role","roleRef","clicked","setClicked","loading","setLoading","dispatch","navigate","url","process","env","REACT_APP_REGISTRATION_URL","validationSchema","object","string","required","min","oneOf","ref","formik","initialValues","validateSchema","onSubmit","values","current","value","registrationForm","handleSubmit","handleChange","errors","submitButton"],"sources":["/home/dev/Documents/bugzilla/client/src/auth/Registration.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\"\nimport { useDispatch } from \"react-redux\"\nimport * as yup from \"yup\"\n\nimport { signUpUser } from \"../redux/actions/userActions\"\nimport { useNavigate } from \"react-router-dom\"\nimport { useFormik } from \"formik\"\nimport { Spinner } from \"../components\"\n\nimport styles from \"../assets/scss/registration.module.css\"\n\nconst Registrations = () => {\n  const [state, setState] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    passwordConfirmation: \"\",\n    role: \"\",\n  })\n  const roleRef = useRef()\n  const [clicked, setClicked] = useState(false)\n  const [loading, setLoading] = useState(false)\n  const dispatch = useDispatch()\n  const navigate = useNavigate()\n  const url = process.env.REACT_APP_REGISTRATION_URL\n  const validationSchema = yup.object({\n    name: yup.string().required(\"Name is Required\"),\n    email: yup\n      .string()\n      .email(\"Invalid Email Address\")\n      .required(\"Email is required\"),\n    password: yup\n      .required(\"Password is required\")\n      .min(5, \"Length should be greater than 5\"),\n    passwordConfirmation: yup\n      .string()\n      .oneOf([yup.ref(\"password\"), null], \"Passwords must match\"),\n    role: yup.string().required(\"Role is required\"),\n  })\n  const formik = useFormik({\n    initialValues: {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      passwordConfirmation: \"\",\n      role: \"\",\n    },\n    validateSchema: yup.object({\n      name: yup.string().required(\"Name is Required\"),\n      email: yup\n        .string()\n        .email(\"Invalid Email Address\")\n        .required(\"Email is required\"),\n      password: yup\n        .required(\"Password is required\")\n        .min(5, \"Length should be greater than 5\"),\n      passwordConfirmation: yup\n        .string()\n        .oneOf([yup.ref(\"password\"), null], \"Passwords must match\"),\n      role: yup.string().required(\"Role is required\"),\n    }),\n    onSubmit: (values) => {\n      setClicked(true)\n      setState({\n        ...state,\n        name: values.name,\n        email: values.email,\n        password: values.password,\n        passwordConfirmation: values.passwordConfirmation,\n        role: roleRef.current.value,\n      })\n    },\n  })\n\n  useEffect(() => {\n    if (clicked) {\n      dispatch(signUpUser(url, state, setLoading, navigate))\n      setLoading(true)\n    }\n  }, [clicked, state, url, dispatch, navigate])\n\n  return loading ? (\n    <Spinner />\n  ) : (\n    <form className={styles.registrationForm} onSubmit={formik.handleSubmit}>\n      <input\n        type=\"name\"\n        name=\"name\"\n        placeholder=\"Your Name\"\n        onChange={formik.handleChange}\n        value={formik.values.name}\n        required\n      ></input>\n      {formik.errors.name && <p>{formik.name.errors}</p>}\n\n      <input\n        type=\"email\"\n        name=\"email\"\n        placeholder=\"Email\"\n        onChange={formik.handleChange}\n        value={formik.values.email}\n        required\n      ></input>\n      {formik.errors.name && <p>{formik.name.email}</p>}\n      <input\n        type=\"password\"\n        name=\"password\"\n        placeholder=\"Password\"\n        onChange={formik.handleChange}\n        value={formik.values.password}\n        required\n      ></input>\n      {formik.errors.name && <p>{formik.name.password}</p>}\n      <input\n        type=\"password\"\n        name=\"passwordConfirmation\"\n        placeholder=\"Password Confirmation\"\n        onChange={formik.handleChange}\n        value={formik.values.passwordConfirmation}\n        required\n      ></input>\n      {formik.errors.name && <p>{formik.name.passwordConfirmation}</p>}\n      <select name=\"roles\" ref={roleRef} onChange={formik.handleChange}>\n        <option value=\"manager\">Manager</option>\n        <option value=\"developer\">Developer</option>\n        <option value=\"qa\">QA</option>\n      </select>\n      {formik.errors.name && <p>{formik.name.role}</p>}\n      <button className={styles.submitButton} type=\"submit\">\n        Submit\n      </button>\n    </form>\n  )\n}\n\nexport default Registrations\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}