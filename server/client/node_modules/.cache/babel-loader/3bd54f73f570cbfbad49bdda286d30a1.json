{"ast":null,"code":"import _slicedToArray from\"/home/dev/Documents/bugzilla/server/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useDispatch}from\"react-redux\";import{useSnackbar}from\"react-simple-snackbar\";import{useSelector}from\"react-redux\";import{authorizeLogIn}from\"../../redux/actions/userActions\";import{options}from\"../options\";import{AUTHORIZED_ROUTE}from\"../../redux/actions/constants\";import{useEffect}from\"react\";export var useAuthorize=function useAuthorize(url){var dispatch=useDispatch();var _useSnackbar=useSnackbar(options),_useSnackbar2=_slicedToArray(_useSnackbar,1),openSnackbar=_useSnackbar2[0];var message=useSelector(function(state){return state.user.message;});useEffect(function(){var profile=JSON.parse(localStorage.getItem(\"profile\"));console.log(profile.role+process.env.REACT_APP_AUTHORIZE);dispatch(authorizeLogIn(url+process.env.REACT_APP_AUTHORIZE,profile,openSnackbar));},[]);return message===AUTHORIZED_ROUTE;};","map":{"version":3,"names":["useDispatch","useSnackbar","useSelector","authorizeLogIn","options","AUTHORIZED_ROUTE","useEffect","useAuthorize","url","dispatch","openSnackbar","message","state","user","profile","JSON","parse","localStorage","getItem","console","log","role","process","env","REACT_APP_AUTHORIZE"],"sources":["/home/dev/Documents/bugzilla/server/client/src/helpers/hooks/useAuthorize.js"],"sourcesContent":["import { useDispatch } from \"react-redux\"\nimport { useSnackbar } from \"react-simple-snackbar\"\nimport { useSelector } from \"react-redux\"\n\nimport { authorizeLogIn } from \"../../redux/actions/userActions\"\nimport { options } from \"../options\"\nimport { AUTHORIZED_ROUTE } from \"../../redux/actions/constants\"\nimport { useEffect } from \"react\"\n\nexport const useAuthorize = (url) => {\n  const dispatch = useDispatch()\n  const [openSnackbar] = useSnackbar(options)\n  const message = useSelector((state) => state.user.message)\n\n  useEffect(() => {\n    const profile = JSON.parse(localStorage.getItem(\"profile\"))\n    console.log(profile.role + process.env.REACT_APP_AUTHORIZE)\n\n    dispatch(\n      authorizeLogIn(\n        url + process.env.REACT_APP_AUTHORIZE,\n        profile,\n        openSnackbar\n      )\n    )\n  }, [])\n\n  return message === AUTHORIZED_ROUTE\n}\n"],"mappings":"gIAAA,OAASA,WAAT,KAA4B,aAA5B,CACA,OAASC,WAAT,KAA4B,uBAA5B,CACA,OAASC,WAAT,KAA4B,aAA5B,CAEA,OAASC,cAAT,KAA+B,iCAA/B,CACA,OAASC,OAAT,KAAwB,YAAxB,CACA,OAASC,gBAAT,KAAiC,+BAAjC,CACA,OAASC,SAAT,KAA0B,OAA1B,CAEA,MAAO,IAAMC,aAAY,CAAG,QAAfA,aAAe,CAACC,GAAD,CAAS,CACnC,GAAMC,SAAQ,CAAGT,WAAW,EAA5B,CACA,iBAAuBC,WAAW,CAACG,OAAD,CAAlC,8CAAOM,YAAP,kBACA,GAAMC,QAAO,CAAGT,WAAW,CAAC,SAACU,KAAD,QAAWA,MAAK,CAACC,IAAN,CAAWF,OAAtB,EAAD,CAA3B,CAEAL,SAAS,CAAC,UAAM,CACd,GAAMQ,QAAO,CAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAX,CAAhB,CACAC,OAAO,CAACC,GAAR,CAAYN,OAAO,CAACO,IAAR,CAAeC,OAAO,CAACC,GAAR,CAAYC,mBAAvC,EAEAf,QAAQ,CACNN,cAAc,CACZK,GAAG,CAAGc,OAAO,CAACC,GAAR,CAAYC,mBADN,CAEZV,OAFY,CAGZJ,YAHY,CADR,CAAR,CAOD,CAXQ,CAWN,EAXM,CAAT,CAaA,MAAOC,QAAO,GAAKN,gBAAnB,CACD,CAnBM"},"metadata":{},"sourceType":"module"}